include ../config.mk

ifdef DEBUG
DEBUG_CFLAGS := -g
endif

CFLAGS := -Wall -Wextra -Werror -std=c99 -O2 $(DEBUG_CFLAGS) $(CFLAGS)
CPPFLAGS := -I../include @LLL_CFLAGS@ @LIBEXCEPTION_CFLAGS@ $(CPPFLAGS)
LDFLAGS := @LLL_LIBS@ @LIBEXCEPTION_LIBS@ $(LDFLAGS)
LIBTOOL_CURRENT := @LIBTOOL_CURRENT@
LIBTOOL_REVISION := @LIBTOOL_REVISION@
LIBTOOL_AGE := @LIBTOOL_AGE@
LIBTOOL_VERSION := $(LIBTOOL_CURRENT):$(LIBTOOL_REVISION):$(LIBTOOL_AGE)

SOURCES := $(wildcard *.c) $(wildcard inline/*.c)
OBJS := $(SOURCES:.c=.lo)

all: $(LIBRARY_NAME)

$(LIBRARY_NAME): $(OBJS)
	$(LIBTOOL) --mode=link $(CC) $(LDFLAGS) -rpath $(LIBDIR) -version-info $(LIBTOOL_VERSION) -o $@ $^

.deps/%.d: %.c
	@set -e; rm -f $@; \
	mkdir -p $(dir $@); \
	$(CC) -MM -MG -MT '$(<:.c=.lo) $@' -MF $@ $(CPPFLAGS) $<

-include $(patsubst %.c,.deps/%.d,$(SOURCES))

%.lo: %.c
	$(LIBTOOL) --mode=compile $(CC) $(CPPFLAGS) $(CFLAGS) -c -o $@ $<

install: $(LIBRARY_NAME)
	mkdir -p $(LIBDIR)
	$(LIBTOOL) --mode=install $(INSTALL) $< $(LIBDIR)

clean:
	rm -rf *.o *.lo inline/*.o inline/*.lo $(LIBRARY_NAME)
	rm -rf .deps .libs inline/.deps inline/.libs
